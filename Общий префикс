// код не сделан полностью

import java.util.Scanner;
public class Ss {
    public static String ix(String... strings) {


        //  наибольшего общего префикса строк


        if (strings.length == 0) {
            return "";
        }StringBuilder longestCommonPrefix = new StringBuilder();
        for (int i = 0; i < strings[0].length(); i++) {
            char Char = strings[0].charAt(i);
            boolean Match = true;
            for (int j = 1; j < strings.length; j++) {
                if (i >= strings[j].length() || strings[j].charAt(i) != Char) {
                    Match = false;
                    break;}
            }if (!Match) {break;
            } else {longestCommonPrefix.append(Char);}}return longestCommonPrefix.toString();}



   //яблоко абрикос рименение НЕ ЗАБЫТЬ
    public static void main(String[] args) {
        String[] words = {"apple", "apricot", "application"};
        String fix =ix(words);
        System.out.println("Самый длинный общий префикс:" + fix);
    }
}



import java.util.Scanner;

class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Введите количество строк матрицы: ");
        int rows = scanner.nextInt();
        
        System.out.print("Введите количество столбцов матрицы: ");
        int cols = scanner.nextInt();
        
        int[][] matrix = new int[rows][cols];
        
        System.out.println("Вводите элементы матрицы:");
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                System.out.printf("Матрица[%d][%d]: ", i + 1, j + 1);
                matrix[i][j] = scanner.nextInt();
            }
        }
        
        int[][] transposedMatrix = transpose(matrix);
        
        System.out.println("\nТранспонированная матрица:");
        printMatrix(transposedMatrix);
    }

    public static int[][] transpose(int[][] matrix) {
        int m = matrix.length;
        int n = matrix[0].length;
        
        int[][] transposedMatrix = new int[n][m];
        
        for (int i = 0; i < m; ++i) {
            for (int j = 0; j < n; ++j) {
                transposedMatrix[j][i] = matrix[i][j];
            }
        }
        
        return transposedMatrix;
    }

    public static void printMatrix(int[][] matrix) {
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[0].length; j++) {
                System.out.print(matrix[i][j] + " ");
            }
            System.out.println();
        }
    }
}